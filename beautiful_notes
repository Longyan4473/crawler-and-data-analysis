''' 主要内容：标签选择器（title，id），标准选择器（find_all），css选择器（select（））'''


from bs4 import BeautifulSoup
soup = BeautifulSoup(html, 'lxml')
print(soup.prettify())    #将网页代码规范化，会补全缺失的>等符号
print(soup.title.string)   #获取title

'''标签选择器，选择速度很快'''
soup = BeautifulSoup(html, 'lxml')
print(soup.title)
print(type(soup.title))
print(soup.head)
print(soup.p)

'''获取属性'''
print(soup.p)
print(soup.p.attrs['name'])
print(soup.p['name'])
print(soup.p.string)   #获取内容

'''嵌套选择'''
print(soup.head)
print(soup.head.title)
print(soup.head.title.string)

'''子节点孙节点'''
#用contents可以返回该节点的所有子节点,children方法返回的是一个迭代器
print(soup.p.contents)  #返回的一个列表
print(soup.p.children)
for i, child in enumerate(soup.p.children):
    print(i, child)
#获取所有的子，孙节点
print(soup.p.descendants)
for i, child in enumerate(soup.p.descendants):
    print(i, child)

print(soup.a.parent)   #返回父节点
print(soup.a.parents)  #返回其所有的上级节点，父父节点也会返回

print(list(enumerate(soup.a.next_siblings)))   #返回兄弟节点
print(list(enumerate(soup.a.previous_siblings)))


'''标准选择器,find_all类似正则表示中的findall，可根据标签名，属性，内容查找文档'''
find_all(name,attrs,recursive,text,**kwargs)
print(soup.find_all('</a>'))
层层查找
soup = BeautifulSoup(html, 'lxml')
for ul in soup.find_all('ul'):
    print(ul.find_all('li'))

#利用attrs 来查找
print(soup.find_all(attrs={'id': 'list-1'}))
#利用提供的一些属性来查找
print(soup.find_all(id='list-1'))
print(soup.find_all(class_='element'))
#利用text根据文本的内容来进行选择,用来匹配会比较方便
print(soup.find_all(text='foo'))
#find()用来返回单个元素
print(soup.find('ul'))

html = '''
<div>
   <ul>
      <li class="item-0">first item</li>
      <li class="item-1"><a href="link2.html">second item</a></li>
      <li class="item-0 active"><a href="link3.html"><span class="bold">third item</span></a></li>
      <li class="item-1 active"><a href="link4.html">fourth item</a></li>
      <li class="item-0"><a href="link5.html">fifth item</a></li>
    </ul>
 </div>
'''
'''CSS选择器，用select方法，class标签前加. ，id前面需加#   层之间用空格隔开,层层嵌套'''
soup = BeautifulSoup(html, 'lxml')
print(soup.select('.panel .panel-heading'))
print(soup.select('ul li'))
print(soup.select('ul li')[0].get_text())
print(soup.select('#list-2 .element'))

#获取属性,获取内容可以用get_text
for ul in soup.select('ul'):
    print(ul['id'])
    print(ul.attrs['id'])
    print(ul.get_text())






